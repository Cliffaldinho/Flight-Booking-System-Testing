package seng3150.group1.models;

/**seng3150.group1.Recommendation.java
 * Author: Tom Schwenke
 * Version: 6/6/18
 *
 * This class is used for business logic relating to the pop-up recommendations.
 *
 */
public class Recommendation {

    /**
     * Given a set of SearchCriteria, determines takes the user category and generates a recommendation
     * for a way the user might modify their search for more relevant result ordering.
     * Each possible return String from 'generate' has a matching set of actual modifications
     * in the 'refineSearchCriteria' method.
     * @param sc - the SerachCriteria to make a recommendation based off of
     * @return - A message to display to the user recommending a refinement for their search.
     */
    public static String generate(SearchCriteria sc){

        switch(sc.getUserCategory()) {
            case "Holiday Maker":
                return " by taking a flight with another stopover: ";

            case "Business Traveller":
                return " by only showing direct flights: ";

            case "Frequent Weekender":
                return " by only showing the top rated flights: ";

            case "Backpacker":
                return " by including flights from more days for more options: ";

            default:
                return "Sorry, we couldn't come up with any recommendations for you. ";
        }
    }


    /**
     * Modifies the searchCriteria according to the given refinement
     * @param sc - the SearchCriteria to be modified.
     * @param refinement - the message (previously generated by 'Recommendation.generate')
     *                   which will describes what should be modified.
     */
    public static void refineSearchCriteria(SearchCriteria sc, String refinement){
        switch(refinement){
            case "Take a flight with another stopover to explore a new city: ":
                sc.setNoStopOversWeight(0.35);
                break;

            case "Don't want the hassle of multi-leg flights? Show direct flights only: ":
                sc.setNoStopOversWeight(1);
                break;

            case "Prefer a more comfortable flight? Try this search: ":
                sc.setComfortWeight(1);
                sc.setDurationWeight(0);
                break;

            case "Sacrifice comfort for an even lower priced flight: ":
                sc.setCostWeight(0);
                sc.setDurationWeight(0);
                sc.setCostWeight(1);
                break;
        }
    }
}
